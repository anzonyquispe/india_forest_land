
R version 4.3.1 (2023-06-16) -- "Beagle Scouts"
Copyright (C) 2023 The R Foundation for Statistical Computing
Platform: x86_64-redhat-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> 
> library(augsynth)
> library(data.table)
> library(dplyr)

Attaching package: ‘dplyr’

The following objects are masked from ‘package:data.table’:

    between, first, last

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

> library(fixest)
> 
> # Getting the workign directory 
> shell_root <- "/scratch/gpfs/ar8787/groupdata2/india_forest_land" 
> dbox_root <- "~/Dropbox/india_forest_land" 
> root <- shell_root
> setwd( root )
> 
> # Import data
> df1 <- fread("A_MicroData/data_sysdif.csv")
> 
> list_state <-  unique(df1$pc11_state_id)
> state_id <- list_state[1]
> 
> 
> df2 <- df1[df1$pc11_state_id == state_id, ]
> 
> 
> # Estimatio Result
> ppool_syn <- multisynth(per_treecover ~ post_ror_data_entry, 
+                         vill_id, year, df2, time_cohort = TRUE, n_leads = 9 )
> 
> filename <- paste0( "espec_st_" , state_id, ".RDS")
> path <- file.path("E_Estimates/_vcf_10_augsyth/state", filename)
> saveRDS( ppool_syn, path )
> 
> 
> 
> # Get Summary result
> ppool_syn_time_summ <- summary( ppool_syn )
> filename <- paste0( "espec_st_" , state_id, "_sum.RDS")
> path <- file.path("E_Estimates/_vcf_10_augsyth/state", filename)
> saveRDS( ppool_syn_time_summ,  path )
> 
> 
> 
> 
> # Get the plot
> est_df <- ppool_syn_time_summ$att
> est_df <- est_df[est_df$Level == "Average", ]
> est_df <- est_df[apply(!is.na(est_df), 1, all),]
> 
> 
> n_df <- df2[t2ev_ror_data_entry %in% est_df$Time][, .N, by = t2ev_ror_data_entry]
> n_df$Time <- n_df$t2ev_ror_data_entry
> setorder(n_df,Time )
> setorder(est_df,Time )
> 
> 
> 
> # Getting factors
> rect.length <- (max(est_df[,"Estimate"], na.rm = TRUE) - 
+                   min(est_df[,"Estimate"], na.rm = TRUE))/2
> scale_fac <- 0.8 * rect.length / ( max(n_df[,"N"]) )
> min_y_lim <- round(min(est_df$lower_bound), 2) * 1.05
> max_y_lim <- round( max(est_df$upper_bound), 2) * 0.95
>   
> est_df[,"xmin"] <- est_df[,"Time"] - 0.2
> est_df[,"xmax"] <- est_df[,"Time"] + 0.2
> est_df[,"ymin"] <- min_y_lim
> est_df[,"ymax"] <- est_df[,"ymin"] + ( n_df[,"N"] * scale_fac )
> 
> 
> # Getting the plot
> p <- ggplot(est_df, aes(x = Time, y = Estimate)) + 
+   geom_line(color = "black") +
+   geom_point(color = "blue") +
+   geom_errorbar(aes(ymin = lower_bound, ymax = upper_bound), 
+                 width = 0.2, color = "red") +
+   geom_rect(data = est_df, aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax), 
+             fill = "grey70", colour = "grey69", alpha = 0.4, size = 0.2) + 
+   coord_cartesian(ylim = c( min_y_lim, max_y_lim ) ) +
+   scale_y_continuous(name = "Estimate", 
+                      sec.axis = sec_axis(~(.+ (-1*min_y_lim)) * (1/scale_fac), 
+                                          name = "Number of Observations")) + 
+   labs(y = "ATT", x = "Time to Event", title = "Ror Data Entry at Block Level if more than 50% Villages are Treated") + 
+   geom_vline(aes(xintercept = 0), linetype = "dashed", color = "gray") +  # Dashed vertical line at x = 5
+   geom_hline(aes(yintercept = 0), linetype = "dashed", color = "gray") + 
+   theme_minimal()
Error in ggplot(est_df, aes(x = Time, y = Estimate)) : 
  could not find function "ggplot"
Execution halted
