
R version 4.3.1 (2023-06-16) -- "Beagle Scouts"
Copyright (C) 2023 The R Foundation for Statistical Computing
Platform: x86_64-redhat-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(did)
> library(data.table)
> library(dplyr)

Attaching package: ‘dplyr’

The following objects are masked from ‘package:data.table’:

    between, first, last

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

> library(boot)
> library(ssynthdid)
> library( tidyr )
> 
> setwd("/scratch/gpfs/ar8787/groupdata2/india_forest_land")
> 
> # Input estimate
> data <- fread("A_MicroData/data_sysdif.csv")
> 
> # Generation of year of treatment
> data$tyear <- data$ev_ror_data_entry
> data[is.na(data$tyear), 'tyear'] <-  0 
> 
> # Generation of deciles
> # Convert your data frame to data.table (if it's not already)
> data <- as.data.table(data)
> 
> # 1. Generate deciles for per_treecover for the year 2000
> data[year == 2010, treedec := ntile(per_treecover, 10)]
> # 2. For each village, calculate the maximum decile value
> data[, treedec1 := max(treedec, na.rm = TRUE), by = vill_id]
> # 3. Tabulate the max decile value and generate indicator variables
> # Since data.table doesn't have a direct tabulate and generate functionality,
> # we'll achieve this using a join
> unique_treedec1 <- unique(data$treedec1)
> for (val in unique_treedec1) {
+   col_name <- paste0("itreedec", val)
+   data[, (col_name) := 0L]
+   data[treedec1 == val, (col_name) := 1L]
+ }
> # 4. Drop the temporary decile variables
> data[, c("treedec", "treedec1") := NULL]
> 
> # Add the per_treecover of 2010
> data[year == 2010, treecover2010yr_aux := per_treecover]
> data[, treecover2010yr := max( treecover2010yr_aux, na.rm = TRUE), 
+      by = vill_id]
> data[, c( "treecover2010yr_aux" ) := NULL]
> 
> # Order the dataset
> setorder(data, vill_id, year)
> 
> # Start estimation
> out <- att_gt(yname = "per_treecover",
+               gname = "tyear",
+               idname = "vill_id",
+               tname = "year",
+               xformla = ~ 1 + itreedec2 + 
+                 itreedec3 + itreedec4 + itreedec5 + itreedec6 + itreedec7 +
+                 itreedec7 + itreedec8 + itreedec9 + itreedec10,
+               data = data,
+               est_method = "reg", 
+               control_group = c("nevertreated", "notyettreated")
+ )
> 
> saveRDS( out, 'E_Estimates/_vcf_10_callaway_santanna_analysis/5_espec_cs.RDS')
> 
> 
> 
> 
> 
> proc.time()
    user   system  elapsed 
9306.961  231.184 9568.831 
